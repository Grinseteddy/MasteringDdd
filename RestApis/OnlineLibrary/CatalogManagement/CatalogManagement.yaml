openapi: 3.1.0
info:
  title: Catalog management of the online library
  description: The catalog contains the books a member can search for e.g. by title or author
  contact:
    email: annegret.junker@gmx.de
    name: Annegret Junker
    url: https://github.com/Grinseteddy
  version: 1.0.0
  x-api-id: e4baac2e-365d-4de2-bcec-c1d1c968fb30
servers:
  - url: 'https://myonline-library.com/catalog-management'
security:
  - openIdConnect:
      - catalog:read
      - catalog:write
      - catalog:admin
      - catalogentry:read
      - catalogentry:write
      - catalogentry:admin
tags:
  - name: Catalog Entries
    description: All endpoints handling catalog entries
paths:
  # /catalogs:
    # for the moment we assume we have only one catalog
  /catalog-entries:
    get:
      description: Using this function one can search for catalog entries by several entries e.g. title or authors, or publishing year
      operationId: getCatalogEntryByFilterCriteria
      tags:
        - Catalog Entries
      security:
        - openIdConnect:
            - catalogentry:read
      parameters:
        - $ref: '#/components/parameters/SearchCriteriasParameter'
        - $ref: '#/components/parameters/SearchParameterPublishedNotBefore'
        - $ref: '#/components/parameters/SearchParameterPublishedAfter'
        - $ref: '#/components/parameters/VersionParameter'
      responses:
        '200':
          $ref: '#/components/responses/CatalogEntriesResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'
        default:
          $ref: '#/components/responses/DefaultResponse'

    post:
      description: Description # describe your function
      # define a unique operationId
      operationId: createNewRessource
      tags:
        - Catalog Entries
      security:
        - openIdConnect:
            - catalogentry:write
      parameters:
        - $ref: '#/components/parameters/VersionParameter'
      requestBody:
      # link to your resource to be created
        $ref: '#/components/requestBodies/CatalogEntryToBeCreatedRequest'
      responses:
        '201':
          $ref: '#/components/responses/LinkToCatalogEntryResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'
        default:
          $ref: '#/components/responses/DefaultResponse'

  /catalog-entries/{catalogEntryId}:
    get:
      description: Description # describe your function
      # define a unique operationId
      operationId: getCatalogEntryById
      tags:
        - Catalog Entries
      security:
        - openIdConnect:
            - catalogentry:read
      parameters:
        - $ref: '#/components/parameters/CatalogEntryIdentifierParameter'
        - $ref: '#/components/parameters/VersionParameter'
      responses:
        '200':
        # Answer with your resource
          $ref: '#/components/responses/CatalogEntryResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'
        default:
          $ref: '#/components/responses/DefaultResponse'

    put:
      description: Description # describe your function
      # define a unique operationId
      operationId: updateCatalogEntryById
      tags:
        - Catalog Entries
      security:
        - openIdConnect:
            - catalogentry:write
      parameters:
        - $ref: '#/components/parameters/CatalogEntryIdentifierParameter'
        - $ref: '#/components/parameters/VersionParameter'
      requestBody:
        $ref: '#/components/requestBodies/CatalogEntryToBeChangedRequest'
      responses:
        '200':
          $ref: '#/components/responses/LinkToCatalogEntryResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'
        default:
          $ref: '#/components/responses/DefaultResponse'

    delete:
      description: Description # describe your function
      # define a unique operationId
      operationId: deleteCatalogEntryById
      tags:
        - Catalog Entries
      security:
        - openIdConnect:
            - catalogentry:admin
      parameters:
        - $ref: '#/components/parameters/CatalogEntryIdentifierParameter'
        - $ref: '#/components/parameters/VersionParameter'
      responses:
        '200':
          $ref: '#/components/responses/SuccessfulOperationResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'
        default:
          $ref: '#/components/responses/DefaultResponse'

components:
  parameters:
    CatalogEntryIdentifierParameter:
      name: catalogEntryId
      description: Catalog entry identifier
      required: true
      in: path
      schema:
        type: string
        format: uuid
        examples:
          - 448b5bc-a9bc-4036-8899-c77f781a76d5

    SearchCriteriasParameter:
      name: searchCriteria
      description: Search criterias for a fulltext search e.g. author, title or ISBN
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
          minLength: 2
          maxLength: 200
          examples:
            - Eric Evans
            - Domain-driven design
            - 978-0321125217

    SearchParameterPublishedNotBefore:
      name: publishedNotBefore
      description: |
        A search parameter based on publishing year. The year needs to be in the past.
        The year mus be larger or equal to the year given.
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/PublishingYear'

    SearchParameterPublishedAfter:
      name: publishedAfter
      description: |
        A search parameter based on publishing year. The year needs to be in the past.
        The year mus be smaller or equal to the year given.
      in: query
      required: false
      schema:
        $ref: '#/components/schemas/PublishingYear'

    VersionParameter:
      name: x-version
      description: Version of the API specification used delivered in header
      in: header
      required: true
      schema:
        type: string
        # Give here the versions of your specification supported by your implementation
        x-extensible-enum:
          - 1.0.0
        default: 1.0.0
        examples:
          - 1.0.0

  responses:
    BadRequestResponse:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'


    ForbiddenResponse:
      description: Forbidden

    LinkToCatalogEntryResponse:
      description: Successful operation - entry created
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Link"

    NotFoundResponse:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    CatalogEntriesResponse:
      description: List of the resource you want to expose
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CatalogEntries'

    CatalogEntryResponse:
      description: Delivers back the resource to be exposed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CatalogEntry'

    ServiceNotAvailableResponse:
      description: Service not available
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    DefaultResponse:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    SuccessfulOperationResponse:
      description: Successful operation

  requestBodies:

    CatalogEntryToBeCreatedRequest:
      description: Creates a new resource
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CatalogEntryToBeCreated'

    CatalogEntryToBeChangedRequest:
      description: Updates the resource provided
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CatalogEntry'

  schemas:
    Error:
      description: An error object used for error responses
      type: object
      required:
        - title
        - status
        - timestamp
      properties:
        title:
          description: A short description of the problem using kebab-cases
          type: string
          minLength: 2
          maxLength: 255
          examples:
            - Resource not found
        detail:
          description: |
            A human-readable description of the problem which can be used by technicians to solve the problem.
          type: string
          examples:
            - The requested resource could not be found. Please check your URI.
        timestamp:
          description: Point in time when the error occurred
          type: string
          format: date-time
          examples:
            - 2024-07-01T23:32:54T+01:00
        severity:
          description: Severity of the according error
          type: string
          enum:
            - FATAL
            - ERROR
            - WARNING
            - INFO
          examples:
            - ERROR

    Link:
      description: Link to an entity
      type: object
      required:
        - type
        - link
      properties:
        type:
          description: Not fully qualified type name of the object
          type: string
          minLength: 2
          maxLength: 155
          examples:
            - CatalogEntry
        link:
          description: URL to the according entity
          type: string
          format: uri
          examples:
            - https://myonline-library.com/catalog-management/catalog-entries/74d870fa-9e93-4ffd-907e-038c85e8bc20

    PublishingYear:
      description: The year when a book was published. The year is in the past.
      type: string
      pattern: ^[0-9]{1,4} ?[a,b]?.?c?.?$
      examples:
        - 1964
        - 2023
        - 583 bc

    CatalogEntry:
      description: An entry in the catalog representing a book
      type: object
      allOf:
        - $ref: '#/components/schemas/CatalogEntryToBeCreated'
      required:
        - id
      properties:
        id:
          description: Unique identifier for the catalog entry
          type: string
          format: uuid
          examples:
            - a07d62e1-5e2e-4e15-b50d-6ed412175443

    CatalogEntries:
    # Resource array to be delivered as bulk
      type: array
      minItems: 0
      maxItems: 255
      items:
        $ref: '#/components/schemas/CatalogEntry'

    CatalogEntryToBeCreated:
      description: A catalog entry representing a book
      type: object
      required:
        - authors
        - title
        - isbn-10
      properties:
        authors:
          description: |
            Authors of the book with family name and given name(s) divided by comma,
            Anonymous published books get the author name Anonymous
            Names originally not spelled with Latin characters follow the spelling given by the publisher
          type: array
          items:
            type: string
            minLength: 2
            maxLength: 55
            examples:
              - Evans, Eric
              - Tune, Nick
              - Lazzaretti, Fabrizio
        title:
          description: Title of the book as given by the publisher, usually not capitalized
          type: string
          minLength: 2
          maxLength: 255
          examples:
            - Domain-driven design
            - Architecture modernization
            - Domain-driven API design
        subtitle:
          description: Subtitle of the book as given by the publisher
          type: string
          minLength: 2
          maxLength: 255
          examples:
            - Tackling complexity in the heart of software
            - Socio-technical alignment of software, strategy, and structure
            - Crafting great APIs using DDD
        publisher:
          description: Publisher of the book
          type: string
          minLength: 2
          maxLength: 255
          examples:
            - Pearson International
            - Manning
            - APress
        blurb:
          description: Product description given by the publisher
          type: string
          minLength: 10
          maxLength: 2048
          examples:
            - The software development community widely acknowledges that domain modeling is central to software design.
        isbn-10:
          description: International standard book number with 10 digits
          type: string
          pattern: ^[0-9]{10}$
          examples:
            - 0321125215
        isbn-13:
          description: International standard book number with 13 digits
          type: string
          pattern: ^[0-9]{3}-?[0-9]{10}$
          examples:
            - 978-0321125217

  securitySchemes:
    openIdConnect:
      type: openIdConnect
      description: Security scheme for events
      openIdConnectUrl: "https://idp.myservice.de/configuration"