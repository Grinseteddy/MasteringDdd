openapi: 3.1.0
info:
  title: Notes
  description: Notes management allows member to create and edit notes to a book
  contact:
    email: annegret.junker@gmx.de
    name: Annegret Junker
    url: https://github.com/Grinseteddy
  version: 1.0.0
  x-api-id: bac6de80-d60b-4fb0-9e10-3b0bd38eb1be
servers:
  - url: 'https://myonline-library.com/notes-manament'
security:
  - openIdConnect:
      - notes:read
      - notes:write
      - notes:admin
tags:
  - name: Notes
    description: All endpoint belonging to manage notes by a member
paths:
  /notes:
    get:
      description: The notes are search by the book identifier and further text
      operationId: getNotesByContent
      tags:
        - Notes
      security:
        - openIdConnect:
            - notes:read
      parameters:
        - $ref: '#/components/parameters/ContentSearchParameter'
        - $ref: '#/components/parameters/BookIdentifierParameter'
        - $ref: '#/components/parameters/VersionParameter'
      responses:
        '200':
          $ref: '#/components/responses/NotesResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'
        default:
          $ref: '#/components/responses/DefaultResponse'

    post:
      description: Creates a new note to a book
      operationId: createNewNote
      tags:
        - Notes
      security:
        - openIdConnect:
            - notes:write
      parameters:
        - $ref: '#/components/parameters/VersionParameter'
        - $ref: '#/components/parameters/BookIdentifierParameter'
      requestBody:
        $ref: '#/components/requestBodies/NoteToBeCreatedRequest'
      responses:
        '201':
          $ref: '#/components/responses/LinkToNoteResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'
        default:
          $ref: '#/components/responses/DefaultResponse'

  /notes/{noteId}:
    get:
      description: Gets a specific note by its identifier
      operationId: getNoteById
      tags:
        - Notes
      security:
        - openIdConnect:
            - notes:read
      parameters:
        - $ref: '#/components/parameters/NoteIdentifierParameter'
        - $ref: '#/components/parameters/BookIdentifierParameter'
        - $ref: '#/components/parameters/VersionParameter'
      responses:
        '200':
        # Answer with your resource
          $ref: '#/components/responses/NoteResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'
        default:
          $ref: '#/components/responses/DefaultResponse'

    put:
      description: Changes a particular note
      operationId: updateNoteById
      tags:
        - Notes
      security:
        - openIdConnect:
            - notes:write
      parameters:
        - $ref: '#/components/parameters/NoteIdentifierParameter'
        - $ref: '#/components/parameters/BookIdentifierParameter'
        - $ref: '#/components/parameters/VersionParameter'
      requestBody:
        $ref: '#/components/requestBodies/NoteToBeChangedRequest'
      responses:
        '200':
          $ref: '#/components/responses/LinkToNoteResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'
        default:
          $ref: '#/components/responses/DefaultResponse'

    delete:
      description: Description # describe your function
      # define a unique operationId
      operationId: deleteResourceById
      tags:
        - Name Tag
      security:
        - openIdConnect:
            - resource:admin
      parameters:
        - $ref: '#/components/parameters/NoteIdentifierParameter'
        - $ref: '#/components/parameters/BookIdentifierParameter'
        - $ref: '#/components/parameters/VersionParameter'
      responses:
        '200':
          $ref: '#/components/responses/SuccessfulOperationResponse'
        '400':
          $ref: '#/components/responses/BadRequestResponse'
        '403':
          $ref: '#/components/responses/ForbiddenResponse'
        '404':
          $ref: '#/components/responses/NotFoundResponse'
        '500':
          $ref: '#/components/responses/ServiceNotAvailableResponse'
        default:
          $ref: '#/components/responses/DefaultResponse'

components:
  parameters:
    NoteIdentifierParameter:
      name: noteId
      description: Note identifier
      required: true
      in: path
      schema:
        type: string
        format: uuid
        examples:
          - ab5f8ba8-ea8f-4b3c-957e-9f0f7530ae01

    BookIdentifierParameter:
      name: bookId
      description: Book identifier
      required: true
      in: query
      schema:
        type: string
        format: uuid
        examples:
          - 3a2e5b0e-4edc-463e-af30-afdf7530e4cc

    ContentSearchParameter:
      name: searchCriterias
      description: Search criteria such as a note text
      in: query
      required: false
      schema:
        type: array
        minItems: 0
        maxItems: 20
        items:
          type: string
          minLength: 2
          maxLength: 1054
          examples:
            - I found this always inspiring.

    VersionParameter:
      name: x-version
      description: Version of the API specification used delivered in header
      in: header
      required: true
      schema:
        type: string
        # Give here the versions of your specification supported by your implementation
        x-extensible-enum:
          - 1.0.0
        default: 1.0.0
        examples:
          - 1.0.0

  responses:
    BadRequestResponse:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'


    ForbiddenResponse:
      description: Forbidden

    LinkToNoteResponse:
      description: Successful operation - entry created
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Link"

    NotFoundResponse:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'


    NotesResponse:
      description: List of the notes
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Notes'

    NoteResponse:
      description: Delivers back a note
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Note'

    ServiceNotAvailableResponse:
      description: Service not available
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    DefaultResponse:
      description: Unexpected error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    SuccessfulOperationResponse:
      description: Successful operation

  requestBodies:

    NoteToBeCreatedRequest:
      description: Creates a new note
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NoteToBeCreated'

    NoteToBeChangedRequest:
      # needs to be updated by the resource you want to expose
      description: Updates the resource provided
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Note'

  schemas:
    Error:
      description: An error object used for error responses
      type: object
      required:
        - title
        - status
        - timestamp
      properties:
        title:
          description: A short description of the problem using kebab-cases
          type: string
          minLength: 2
          maxLength: 255
          examples:
            - Resource not found
        detail:
          description: |
            A human-readable description of the problem which can be used by technicians to solve the problem.
          type: string
          examples:
            - The requested resource could not be found. Please check your URI.
        timestamp:
          description: Point in time when the error occurred
          type: string
          format: date-time
          examples:
            - 2024-07-01T23:32:54T+01:00
        severity:
          description: Severity of the according error
          type: string
          enum:
            - FATAL
            - ERROR
            - WARNING
            - INFO
          examples:
            - ERROR

    Link:
      description: Link to an entity
      type: object
      required:
        - type
        - link
      properties:
        type:
          description: Not fully qualified type name of the object
          type: string
          minLength: 2
          maxLength: 155
          examples:
            - Note
        link:
          description: URL to the according entity
          type: string
          format: uri
          examples:
            - https://myonline-library.com/notes-management/notes/ab5f8ba8-ea8f-4b3c-957e-9f0f7530ae01

    Note:
      description: A note belonging to a specific passage of a particular book
      type: object
      allOf:
        - $ref: '#/components/schemas/NoteToBeCreated'
      required:
        - id
      properties:
        id:
          description: Unique identifier for the note
          type: string
          format: uuid
          examples:
            - ab5f8ba8-ea8f-4b3c-957e-9f0f7530ae01

    Notes:
      description: All notes belonging to one book
      type: object
      properties:
        bookIdentifier:
          description: Identifier of the book to which the notes belong
          type: string
          format: uuid
          examples:
            - 5c1bb1a0-ea3e-4ced-b89f-1f88253869e3
        bookTitle:
          description: For convenience, the book title is stored besides the identifier
          type: string
          minLength: 2
          macLength: 255
          examples:
            - Patterns and Tricks
        owner:
          description: Owner of the notes who is allowed to change them, given by their member ID
          type: string
          format: uuid
          examples:
            - 9963a0b9-934e-41ec-bf62-af2c1669264e
        ownerName:
          description: For convenience, the owner is stored by their name to be shown e.g. in discussions
          type: string
          minLength: 2
          maxLength: 65
          examples:
            - Miller
        notes:
          type: array
          minItems: 0
          maxItems: 255
          items:
            $ref: '#/components/schemas/Note'

    NoteToBeCreated:
      description: A note belonging to a book and owned by a certain member
      type: object
      required:
        - aTypicalProperty
      properties:
        startPosition:
          description: The start position in the text, where the note belongs to
          type: integer
          format: int64
          minimum: 0
          examples:
            - 1024
        endPosition:
          description: The end position in the next, where the note belongs to, must be larger or equal than startPosition
          type: integer
          format: int64
          minimum: 0
          examples:
            - 1065
        text:
          description: Text of the note belonging to the given text position
          type: string
          minLength: 0
          maxLength: 1024
          examples:
            - This part is really good.

  securitySchemes:
    openIdConnect:
      type: openIdConnect
      description: Security scheme for events
      openIdConnectUrl: "https://idp.myservice.de/configuration"