@startuml
'https://plantuml.com/class-diagram

@startuml
'https://plantuml.com/class-diagram

'left to right direction
top to bottom direction
hide empty members
skinparam linetype polyline
allowmixing


skinparam class {
    backgroundcolor #FFFFFF
    backgroundcolor<<Aggregate>> #CCCCCC
    backgroundcolor<<Entity>> #DDDDDD
    backgroundcolor<<Value Object>> #EEEEEE

    bordercolor grey
    fontcolor black
    fontcolor<<Aggregate>> black
    fontcolor<<Entity>> balck
    fontcolor<<Value Object>> black

    attributefontcolor black
    attributefontsize 12
    attributefontcolor<<Aggregate>> black

    stereotypefontcolor black
    stereotypefontsize 8


}

skinparam arrow {
    color grey
    fontcolor grey
    fontsize 10
}

skinparam storage {
    backgroundcolor white
    bordercolor grey
    borderstyle dashed
    fontcolor grey
}

skinparam note {
    backgroundcolor white
    fontcolor grey
    fontstyle italic
    fontsize 10
    bordercolor grey

}


storage Reading {
    class "BookRead" as bookRead <<(A, #FFFFFF) Aggregate>> {
        *id: uuid
        *lendingEntry: uuid
        *title: string
        *authors: array of string
        readingPosition: array of unsignedInteger
        * status: Status
    }

    class "BookShelf" as bookShelf <<(A, #FFFFFF) Aggregate>> {
        * id: uuid
        * owner: uuid
    }

    note right  {
        Reader of book is
        the owner of
        the bookshelf.
    }

    enum "Status" as statusBookRead <<(N, #FFFFFF)>> {
        NOT_STARTED
        READ
        FINISHED
    }

    bookShelf *--"0..*" bookRead
    bookRead *--"1" statusBookRead

}

storage Lending {
    class "LendingEntry" as lendingEntry <<(A, #FFFFFF) Aggregate>>{
        * bookLent: uuid
        * member: uuid
        + lendBook(book: uuid, member: uuid)
        + returnBook(catalogEntry: uuid, catalog: uuid, member: uuid)
    }

    enum "Status" as statusLending <<(N, #FFFFFF)>> {
        LENT
        RETURNED
    }

    lendingEntry *-"1" statusLending
}


bookRead ..> lendingEntry : use

lendingEntry ..> bookShelf : use


@enduml

@enduml